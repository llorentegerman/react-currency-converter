{"version":3,"sources":["components/InputComponent.js","components/LoadingComponent.js","assets/dollar.js","assets/euro.js","assets/yen.js","clients/CurrenciesRatesClient.js","App.js","serviceWorker.js","index.js"],"names":["styles","StyleSheet","create","buttonContainer","backgroundColor","borderTopLeftRadius","borderBottomLeftRadius","height","width","container","marginBottom","maxWidth","errorBorder","border","errorText","color","fontFamily","position","right","top","whiteSpace","iconText","fontSize","marginTop","input","margin","borderTopRightRadius","borderBottomRightRadius","flex","fontStretch","fontWeight","lineHeight","outlineStyle","padding","inputContainer","InputComponent","Icon","onChange","value","useState","showErrorMessage","setShowErrorMessage","currentValue","setCurrentValue","useEffect","className","css","vertical","horizontal","placeholder","type","onBlur","e","newValue","target","test","replace","style","containerLoadingFS","minHeight","left","zIndex","loading","borderRadius","borderTop","animationName","transform","animationDuration","animationIterationCount","loadingSpan","LoadingComponent","props","aria-hidden","data-prefix","data-icon","role","xmlns","viewBox","fill","d","getRates","a","fetch","response","json","euro","dollar","rates","USD","yen","JPY","title","App","currentValues","setCurrentValues","useAsync","promiseFn","CurrenciesRatesClient","data","isPending","currency","newDollar","toFixed","newEuro","newYen","IconDollar","IconEuro","IconYen","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.35dd52f4.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Column, Row } from 'simple-flexbox';\nimport { StyleSheet, css } from 'aphrodite';\n\nconst styles = StyleSheet.create({\n    buttonContainer: {\n        backgroundColor: '#7eb874',\n        borderTopLeftRadius: 2,\n        borderBottomLeftRadius: 2,\n        height: '100%',\n        width: 74\n    },\n    container: {\n        marginBottom: 20,\n        maxWidth: 790,\n        width: '100%'\n    },\n    errorBorder: {\n        border: '1px solid red'\n    },\n    errorText: {\n        color: 'red',\n        fontFamily: `sans-serif`,\n        position: 'absolute',\n        right: 10,\n        top: 16,\n        whiteSpace: 'no-wrap',\n        width: 88\n    },\n    iconText: {\n        color: '#555',\n        fontFamily: `sans-serif`,\n        fontSize: 12,\n        marginTop: 5\n    },\n    input: {\n        border: 'none',\n        margin: 0,\n        borderTopRightRadius: 2,\n        borderBottomRightRadius: 2,\n        borderTopLeftRadius: 0,\n        borderBottomLeftRadius: 0,\n        color: '#555',\n        flex: 1,\n        fontFamily: `sans-serif`,\n        fontSize: 16,\n        fontStretch: '100%',\n        fontWeight: 400,\n        lineHeight: '18px',\n        outlineStyle: 'none',\n        padding: '10px 32px 10px 32px'\n    },\n    inputContainer: {\n        borderTopRightRadius: 3,\n        borderBottomRightRadius: 3,\n\n        borderTopLeftRadius: 3,\n        borderBottomLeftRadius: 3,\n        border: '1px solid #555',\n        height: 68\n    }\n});\n\nfunction InputComponent({ Icon, iconText, onChange, value }) {\n    const [showErrorMessage, setShowErrorMessage] = useState();\n    const [currentValue, setCurrentValue] = useState(value);\n\n    useEffect(() => {\n        setShowErrorMessage(false);\n        setCurrentValue(value);\n    }, [value]);\n\n    const onBlur = e => {\n        let newValue = e.target.value;\n        if (!newValue) {\n            if (showErrorMessage) {\n                setShowErrorMessage(false);\n            }\n            return;\n        }\n        if (newValue === value) {\n            return; // prevent onChange if it's not a new value\n        }\n\n        const validationRegex = /^[0-9]+([.|,][0-9]+)?$/;\n        if (!validationRegex.test(newValue)) {\n            return setShowErrorMessage(true);\n        }\n        if (showErrorMessage) {\n            setShowErrorMessage(false);\n        }\n        newValue = newValue.replace(',', '.');\n        onChange(newValue);\n    };\n\n    return (\n        <Column className={css(styles.container)}>\n            <Row\n                className={css(\n                    styles.inputContainer,\n                    showErrorMessage && styles.errorBorder\n                )}\n            >\n                <Column\n                    className={css(styles.buttonContainer)}\n                    vertical=\"center\"\n                    horizontal=\"center\"\n                >\n                    <Icon width={32} color=\"#555\" />\n                    <span className={css(styles.iconText)}>{iconText}</span>\n                </Column>\n                <input\n                    className={css(styles.input)}\n                    placeholder=\"Enter amount\"\n                    type=\"text\"\n                    onBlur={onBlur}\n                    onChange={e => setCurrentValue(e.target.value)}\n                    value={currentValue}\n                />\n                {showErrorMessage && (\n                    <div style={{ position: 'relative' }}>\n                        <span className={css(styles.errorText)}>\n                            Invalid value\n                        </span>\n                    </div>\n                )}\n            </Row>\n        </Column>\n    );\n}\n\nexport default InputComponent;\n","import React from 'react';\nimport { StyleSheet, css } from 'aphrodite';\nimport { Column } from 'simple-flexbox';\n\nconst styles = StyleSheet.create({\n    containerLoadingFS: {\n        backgroundColor: 'rgba(0,0,0,.5)',\n        height: '100%',\n        minHeight: '100vh',\n        width: 'calc(100% - 0px)',\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        zIndex: 1000,\n        '@media (max-width: 1080px)': {\n            width: 'calc(100% - 0px)'\n        }\n    },\n    loading: {\n        border: '16px solid #f3f3f3',\n        borderRadius: '50%',\n        borderTop: '16px solid #50c058',\n        width: 120,\n        height: 120,\n        '-webkit-animation': 'spin 2s linear infinite',\n        animationName: [\n            {\n                '0%': {\n                    transform: 'rotate(0deg)'\n                },\n                '100%': {\n                    transform: 'rotate(360deg)'\n                }\n            }\n        ],\n        animationDuration: '2s',\n        animationIterationCount: 'infinite'\n    },\n    loadingSpan: {\n        color: 'white',\n        marginTop: 10,\n        fontSize: 18\n    }\n});\n\nfunction LoadingComponent({ loading }) {\n    return (\n        <div style={{ position: 'relative' }}>\n            {loading && (\n                <Column\n                    className={css(styles.containerLoadingFS)}\n                    horizontal=\"center\"\n                    vertical=\"center\"\n                >\n                    <div className={css(styles.loading)}></div>\n                    <span className={css(styles.loadingSpan)}>\n                        Loading rates...\n                    </span>\n                </Column>\n            )}\n        </div>\n    );\n}\n\nexport default LoadingComponent;\n","import React from 'react';\n\nconst Icon = props => (\n    <svg\n        className=\"svg-inline--fa fa-search fa-w-16\"\n        aria-hidden=\"true\"\n        data-prefix=\"fas\"\n        data-icon=\"search\"\n        role=\"img\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 512 512\"\n        {...props}\n    >\n        <g>\n            <g>\n                <path\n                    fill=\"currentColor\"\n                    d=\"M437.02,74.98C388.668,26.628,324.38,0,256,0S123.332,26.628,74.98,74.98C26.629,123.332,0,187.62,0,256\n\t\t\ts26.629,132.668,74.98,181.02C123.332,485.372,187.62,512,256,512s132.668-26.628,181.02-74.98\n\t\t\tC485.371,388.668,512,324.38,512,256S485.371,123.332,437.02,74.98z M256,482C131.383,482,30,380.617,30,256S131.383,30,256,30\n\t\t\ts226,101.383,226,226S380.617,482,256,482z\"\n                />\n            </g>\n        </g>\n        <g>\n            <g>\n                <path\n                    fill=\"currentColor\"\n                    d=\"M272.067,241h-32.134c-18.307,0-33.2-14.893-33.2-33.199c0-18.307,14.894-33.2,33.2-33.2H304.2c8.284,0,15-6.716,15-15\n\t\t\ts-6.716-15-15-15H271v-33.2c0-8.284-6.716-15-15-15s-15,6.716-15,15v33.2h-1.066c-34.849,0-63.2,28.352-63.2,63.2\n\t\t\tc0,34.848,28.352,63.199,63.2,63.199h32.134c18.306,0,33.199,14.894,33.199,33.2c0,18.306-14.893,33.2-33.199,33.2h-64.267\n\t\t\tc-8.284,0-15,6.716-15,15s6.716,15,15,15H241v33.201c0,8.284,6.716,15,15,15s15-6.716,15-15V367.4h1.067\n\t\t\tc34.848,0,63.199-28.352,63.199-63.2S306.915,241,272.067,241z\"\n                />\n            </g>\n        </g>\n    </svg>\n);\n\nexport default Icon;\n","import React from 'react';\n\nconst Icon = props => (\n    <svg\n        className=\"svg-inline--fa fa-search fa-w-16\"\n        aria-hidden=\"true\"\n        data-prefix=\"fas\"\n        data-icon=\"search\"\n        role=\"img\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 512 512\"\n        {...props}\n    >\n        <g>\n            <g>\n                <path\n                    fill=\"currentColor\"\n                    d=\"M256,0C114.848,0,0,114.848,0,256s114.848,256,256,256s256-114.848,256-256S397.152,0,256,0z M256,480\n\t\t\tC132.48,480,32,379.52,32,256S132.48,32,256,32s224,100.48,224,224S379.52,480,256,480z\"\n                />\n            </g>\n        </g>\n        <g>\n            <g>\n                <path\n                    fill=\"currentColor\"\n                    d=\"M310.976,339.744C299.072,347.872,285.952,352,272,352c-29.472,0-55.008-19.456-68.864-48H256c8.832,0,16-7.168,16-16\n\t\t\tc0-8.832-7.168-16-16-16h-62.656c-0.736-5.216-1.344-10.528-1.344-16s0.608-10.784,1.344-16H272c8.832,0,16-7.168,16-16\n\t\t\tc0-8.832-7.168-16-16-16h-68.864c13.856-28.544,39.392-48,68.864-48c13.952,0,27.072,4.128,38.976,12.256\n\t\t\tc7.296,4.96,17.28,3.136,22.24-4.192c4.992-7.296,3.104-17.248-4.192-22.24C311.936,134.176,292.224,128,272,128\n\t\t\tc-46.88,0-87.008,33.184-103.68,80H144c-8.832,0-16,7.168-16,16c0,8.832,7.168,16,16,16h17.408\n\t\t\tc-0.576,5.312-1.408,10.528-1.408,16s0.832,10.688,1.408,16H144c-8.832,0-16,7.168-16,16c0,8.832,7.168,16,16,16h24.32\n\t\t\tc16.672,46.816,56.8,80,103.68,80c20.224,0,39.936-6.176,57.024-17.824c7.296-4.992,9.184-14.944,4.192-22.24\n\t\t\tC328.256,336.64,318.272,334.784,310.976,339.744z\"\n                />\n            </g>\n        </g>\n    </svg>\n);\n\nexport default Icon;\n","import React from 'react';\n\nconst Icon = props => (\n    <svg\n        className=\"svg-inline--fa fa-search fa-w-16\"\n        aria-hidden=\"true\"\n        data-prefix=\"fas\"\n        data-icon=\"search\"\n        role=\"img\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 512 512\"\n        {...props}\n    >\n        <g>\n            <g>\n                <path\n                    fill=\"currentColor\"\n                    d=\"M256,0C114.848,0,0,114.848,0,256s114.848,256,256,256s256-114.848,256-256S397.152,0,256,0z M256,480\n\t\t\tC132.48,480,32,379.52,32,256S132.48,32,256,32s224,100.48,224,224S379.52,480,256,480z\"\n                />\n            </g>\n        </g>\n        <g>\n            <g>\n                <path\n                    fill=\"currentColor\"\n                    d=\"M347.296,132.704c-6.24-6.24-16.352-6.272-22.624-0.032L256,201.376l-68.672-68.704c-6.24-6.24-16.384-6.24-22.624,0\n\t\t\ts-6.24,16.384,0,22.624L233.376,224H192c-8.832,0-16,7.168-16,16c0,8.832,7.168,16,16,16h48v32h-48c-8.832,0-16,7.168-16,16\n\t\t\tc0,8.832,7.168,16,16,16h48v64c0,8.832,7.168,16,16,16c8.832,0,16-7.168,16-16v-64h48c8.832,0,16-7.168,16-16\n\t\t\tc0-8.832-7.168-16-16-16h-48v-32h48c8.832,0,16-7.168,16-16c0-8.832-7.168-16-16-16h-41.376l68.672-68.672\n\t\t\tC353.536,149.088,353.536,138.944,347.296,132.704z\"\n                />\n            </g>\n        </g>\n    </svg>\n);\n\nexport default Icon;\n","const getRates = async () => {\n    const url = 'https://api.exchangeratesapi.io/latest';\n    const response = await fetch(url);\n    const json = await response.json();\n    return {\n        euro: 1,\n        dollar: json.rates.USD,\n        yen: json.rates.JPY\n    };\n};\nexport default {\n    getRates\n};\n","import React, { useState } from 'react';\nimport { Column } from 'simple-flexbox';\nimport { StyleSheet, css } from 'aphrodite';\nimport { useAsync } from 'react-async';\nimport InputComponent from './components/InputComponent';\nimport LoadingComponent from './components/LoadingComponent';\nimport IconDollar from './assets/dollar';\nimport IconEuro from './assets/euro';\nimport IconYen from './assets/yen';\nimport CurrenciesRatesClient from './clients/CurrenciesRatesClient';\nimport './App.css';\n\nconst styles = StyleSheet.create({\n    container: {\n        minHeight: '100vh',\n        height: '100%'\n    },\n    title: {\n        color: 'white',\n        fontFamily: `sans-serif`\n    }\n});\n\nfunction App() {\n    const [currentValues, setCurrentValues] = useState({\n        dollar: '',\n        euro: '',\n        yen: ''\n    });\n\n    const { data: rates, isPending: loading } = useAsync({\n        promiseFn: CurrenciesRatesClient.getRates\n    });\n\n    const onChange = (currency, value) => {\n        const newDollar =\n            currency === 'dollar'\n                ? value\n                : ((value * rates['dollar']) / rates[currency]).toFixed(2);\n        const newEuro =\n            currency === 'euro'\n                ? value\n                : ((value * rates['euro']) / rates[currency]).toFixed(2);\n        const newYen =\n            currency === 'yen'\n                ? value\n                : ((value * rates['yen']) / rates[currency]).toFixed(2);\n        setCurrentValues({\n            dollar: newDollar,\n            euro: newEuro,\n            yen: newYen\n        });\n    };\n\n    return (\n        <Column\n            horizontal=\"center\"\n            vertical=\"center\"\n            className={css(styles.container)}\n        >\n            <LoadingComponent loading={loading} />\n            <h2 className={css(styles.title)}>CURRENCY CONVERTER</h2>\n            <InputComponent\n                Icon={IconDollar}\n                iconText={'Dollar'}\n                onChange={value => onChange('dollar', value)}\n                value={currentValues.dollar}\n            />\n            <InputComponent\n                Icon={IconEuro}\n                iconText={'Euro'}\n                onChange={value => onChange('euro', value)}\n                value={currentValues.euro}\n            />\n            <InputComponent\n                Icon={IconYen}\n                iconText={'Yen'}\n                onChange={value => onChange('yen', value)}\n                value={currentValues.yen}\n            />\n        </Column>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}